version: '3'
services:
  db:
    build: 
      context: ./docker/postgresql
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB={POSTGRES_DB}
      - POSTGRES_USER={POSTGRES_USER}
      - POSTGRES_PASSWORD={POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - 5432
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./docker/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
  web:
    build: .
    command:
      bash -c "
      sleep 30
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py collectstatic --noinput
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
      - "5678:5678"
    env_file:
      - .env

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - ./docker/lib/letsencrypt:/var/lib/letsencrypt
  #     - ./docker/certbot:/var/www/certbot
  #   command: certonly --webroot --webroot-path=/var/www/certbot -d bolt-uz.xyz
  #   env_file:
  #     - .env

  # nginx:
  #   build:
  #     context: ./docker/nginx
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #     - "443:443"  
  #   volumes:
  #     - ./logs/nginx/:/var/log/nginx/
  #     - ./docker/nginx/conf.d:/etc/nginx/conf.d
  #     - ./docker/certbot:/var/www/certbot
  #   depends_on:
  #     - web
  #     - certbot

volumes:
  postgres_data:
